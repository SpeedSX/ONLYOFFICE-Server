/*
 *
 * (c) Copyright Ascensio System Limited 2010-2015
 *
 * This program is freeware. You can redistribute it and/or modify it under the terms of the GNU 
 * General Public License (GPL) version 3 as published by the Free Software Foundation (https://www.gnu.org/copyleft/gpl.html). 
 * In accordance with Section 7(a) of the GNU GPL its Section 15 shall be amended to the effect that 
 * Ascensio System SIA expressly excludes the warranty of non-infringement of any third-party rights.
 *
 * THIS PROGRAM IS DISTRIBUTED WITHOUT ANY WARRANTY; WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR
 * FITNESS FOR A PARTICULAR PURPOSE. For more details, see GNU GPL at https://www.gnu.org/copyleft/gpl.html
 *
 * You can contact Ascensio System SIA by email at sales@onlyoffice.com
 *
 * The interactive user interfaces in modified source and object code versions of ONLYOFFICE must display 
 * Appropriate Legal Notices, as required under Section 5 of the GNU GPL version 3.
 *
 * Pursuant to Section 7 ยง 3(b) of the GNU GPL you must retain the original ONLYOFFICE logo which contains 
 * relevant author attributions when distributing the software. If the display of the logo in its graphic 
 * form is not reasonably feasible for technical reasons, you must include the words "Powered by ONLYOFFICE" 
 * in every copy of the program you distribute. 
 * Pursuant to Section 7 ยง 3(e) we decline to grant you any rights under trademark law for use of our trademarks.
 *
*/


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MonitoringResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MonitoringResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ASC.Web.Studio.PublicResources.MonitoringResource", typeof(MonitoringResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the cache.
        /// </summary>
        public static string CacheClearBtnText {
            get {
                return ResourceManager.GetString("CacheClearBtnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All the scripts used for the portal correct work are cached for Teamlab maximum performance. Sometimes (usually after a major update or when some incorrectness is observed in portal behavior) you need to clear the cache. Use the &lt;b&gt;Clear the Cache&lt;/b&gt; button to flush the scripts from the server and reload them back again. No portal data will be lost during the operation..
        /// </summary>
        public static string CacheHelpText {
            get {
                return ResourceManager.GetString("CacheHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this option if you observe some incorrectness in portal behavior.
        /// </summary>
        public static string CacheText {
            get {
                return ResourceManager.GetString("CacheText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cache.
        /// </summary>
        public static string CacheTitle {
            get {
                return ResourceManager.GetString("CacheTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check our {0}FAQ page{1} if you have any questions or email us at {2}support@teamlab.com{3}.
        /// </summary>
        public static string ContactUsText {
            get {
                return ResourceManager.GetString("ContactUsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have any questions or email us at {0}support@teamlab.com{1}.
        /// </summary>
        public static string ContactUsText2 {
            get {
                return ResourceManager.GetString("ContactUsText2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact Us.
        /// </summary>
        public static string ContactUsTitle {
            get {
                return ResourceManager.GetString("ContactUsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Period.
        /// </summary>
        public static string LogsDateInterval {
            get {
                return ResourceManager.GetString("LogsDateInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Logs&lt;/b&gt; section allows you to download all the portal logs for a selected period of time archived to a .zip file. Select the period start and end time and click the &lt;b&gt;Download&lt;/b&gt; button to get the logs..
        /// </summary>
        public static string LogsHelpText {
            get {
                return ResourceManager.GetString("LogsHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download all the logs.
        /// </summary>
        public static string LogsText {
            get {
                return ResourceManager.GetString("LogsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs.
        /// </summary>
        public static string LogsTitle {
            get {
                return ResourceManager.GetString("LogsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Ports&lt;/b&gt; section contains the list of all ports necessary for Teamlab portal correct work and their status (open or closed). For your Teamlab server to operate properly these ports must have the &lt;b&gt;Open&lt;/b&gt; status. Please note, that some ports require only either incoming or outgoing connections to be allowed, while other will need both connection types..
        /// </summary>
        public static string PortsHelpText {
            get {
                return ResourceManager.GetString("PortsHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Closed.
        /// </summary>
        public static string PortStatusClosed {
            get {
                return ResourceManager.GetString("PortStatusClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string PortStatusOpen {
            get {
                return ResourceManager.GetString("PortStatusOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All following ports must be open.
        /// </summary>
        public static string PortsText {
            get {
                return ResourceManager.GetString("PortsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ports.
        /// </summary>
        public static string PortsTitle {
            get {
                return ResourceManager.GetString("PortsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &lt;b&gt;Services&lt;/b&gt; section displays the list of all available Teamlab services and their status (running or stopped). You can restart the running services or start the stopped ones using the appropriate action button to the right of the service status..
        /// </summary>
        public static string ServicesHelpText {
            get {
                return ResourceManager.GetString("ServicesHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not found.
        /// </summary>
        public static string ServiceStatusNotFound {
            get {
                return ResourceManager.GetString("ServiceStatusNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running.
        /// </summary>
        public static string ServiceStatusRunning {
            get {
                return ResourceManager.GetString("ServiceStatusRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start pending.
        /// </summary>
        public static string ServiceStatusStartPending {
            get {
                return ResourceManager.GetString("ServiceStatusStartPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped.
        /// </summary>
        public static string ServiceStatusStopped {
            get {
                return ResourceManager.GetString("ServiceStatusStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop pending.
        /// </summary>
        public static string ServiceStatusStopPending {
            get {
                return ResourceManager.GetString("ServiceStatusStopPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teamlab services and their current states.
        /// </summary>
        public static string ServicesText {
            get {
                return ResourceManager.GetString("ServicesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Services.
        /// </summary>
        public static string ServicesTitle {
            get {
                return ResourceManager.GetString("ServicesTitle", resourceCulture);
            }
        }
    }
}
